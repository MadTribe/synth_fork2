"use strict";(self.webpackChunksynth_docs=self.webpackChunksynth_docs||[]).push([[6019],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,h=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},964:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],s={title:"Hello world"},i=void 0,c={unversionedId:"docs/getting_started/hello-world",id:"docs/getting_started/hello-world",isDocsHomePage:!1,title:"Hello world",description:"After installing synth, the next step is to create a namespace.",source:"@site/docs/docs/getting_started/hello-world.md",sourceDirName:"docs/getting_started",slug:"/docs/getting_started/hello-world",permalink:"/docs/getting_started/hello-world",editUrl:"https://github.com/getsynth/synth/edit/master/docs/docs/docs/getting_started/hello-world.md",tags:[],version:"current",frontMatter:{title:"Hello world"},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/docs/getting_started/installation"},next:{title:"Core concepts",permalink:"/docs/getting_started/core-concepts"}},p=[{value:"Where to go from here",id:"where-to-go-from-here",children:[]}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After installing ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth")),", the next step is to create a ",(0,o.kt)("strong",{parentName:"p"},"namespace"),". "),(0,o.kt)("p",null,"Namespaces are directories in your filesystem that ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth"))," uses to read your schemas from. Currently ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth"))," reads schemas written in a specialized JSON data model. You can find out everything there is to know about ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth"))," schemas in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/content/object"},"Generators")," section or in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/schema"},"Schema"),' section. In this section we will show you how to set up a simple "hello world" data generator.'),(0,o.kt)("p",null,"To create a namespace, just create a new directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir hello_synth\n")),(0,o.kt)("p",null,"Finally, we need to add a ",(0,o.kt)("strong",{parentName:"p"},"collection"),' to our namespace. Collections describe\nthe "shape" of the data we want to generate. They are individual JSON files\nwithin a namespace directory written according to\nthe ',(0,o.kt)("a",{parentName:"p",href:"/docs/content/object"},(0,o.kt)("inlineCode",{parentName:"a"},"synth")," schema"),"."),(0,o.kt)("p",null,'To create a collection called "say_hello" in our namespace, simply copy/paste the content of the following example in a file\nat ',(0,o.kt)("inlineCode",{parentName:"p"},"hello_synth/say_hello.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"synth",synth:!0},'{\n    "type": "array",\n    "length": {\n        "type": "number",\n        "subtype": "u64",\n        "constant": 1\n    },\n   "content": {\n        "type": "string",\n        "pattern": "Hello world!"\n    }\n}\n')),(0,o.kt)("p",null,"The previous example snippet is an example of\na ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/schema"},(0,o.kt)("inlineCode",{parentName:"a"},"synth")," schema"),'. All such examples in these pages\nare tagged with a "',(0,o.kt)("strong",{parentName:"p"},"Run"),'"\nbutton that lets you preview how ',(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth"))," would output the corresponding\ndata."),(0,o.kt)("p",null,"Finally, run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"synth generate hello_synth/\n")),(0,o.kt)("p",null,"and you should see an output very close to the output of the snippet."),(0,o.kt)("h2",{id:"where-to-go-from-here"},"Where to go from here"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Take a look at the exhaustive ",(0,o.kt)("a",{parentName:"li",href:"/docs/content/object"},"generators reference"),"."),(0,o.kt)("li",{parentName:"ul"},"Go deeper into how ",(0,o.kt)("a",{parentName:"li",href:"/docs/getting_started/command-line"},(0,o.kt)("inlineCode",{parentName:"a"},"synth"))," works by looking at the ",(0,o.kt)("a",{parentName:"li",href:"/docs/getting_started/core-concepts"},"core concepts")," and the specifications of the ",(0,o.kt)("a",{parentName:"li",href:"/docs/getting_started/schema"},"schema"),"."),(0,o.kt)("li",{parentName:"ul"},"For more complex real life examples, see the ",(0,o.kt)("a",{parentName:"li",href:"/docs/examples/bank"},"examples")," section.")))}m.isMDXComponent=!0}}]);