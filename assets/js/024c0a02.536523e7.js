"use strict";(self.webpackChunksynth_docs=self.webpackChunksynth_docs||[]).push([[1057],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8509:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={title:"Telemetry"},s=void 0,c={unversionedId:"other/telemetry",id:"other/telemetry",isDocsHomePage:!1,title:"Telemetry",description:"Synth collects de-identified usage data to help create a better product and user",source:"@site/docs/other/telemetry.md",sourceDirName:"other",slug:"/other/telemetry",permalink:"/other/telemetry",editUrl:"https://github.com/getsynth/synth/edit/master/docs/docs/other/telemetry.md",tags:[],version:"current",frontMatter:{title:"Telemetry"},sidebar:"docsSidebar",previous:{title:"series",permalink:"/docs/content/series"}},p=[{value:"Philosophy",id:"philosophy",children:[]},{value:"Enabling / Disabling Telemetry",id:"enabling--disabling-telemetry",children:[]},{value:"Where does the data go?",id:"where-does-the-data-go",children:[]},{value:"What does Synth collect?",id:"what-does-synth-collect",children:[]}],m={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Synth collects de-identified usage data to help create a better product and user\nexperience."),(0,a.kt)("p",null,"You can opt-out of Synth's anonymous data collection at any time by running the\ncommand:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ synth telemetry disable\n")),(0,a.kt)("p",null,"or deleting the file at ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/synth/config.json"),"."),(0,a.kt)("p",null,"Synth is completely free and open-source. This means all the code that provide\nus with telemetry information is accessible by anyone. You can find\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/getsynth/synth/blob/master/synth/src/cli/telemetry.rs"},"the ",(0,a.kt)("inlineCode",{parentName:"a"},"telemetry.rs")," submodule of Synth in our public repository"),"."),(0,a.kt)("p",null,"The binary file that is downloaded by the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/getsynth/synth/blob/master/tools/install.sh"},"installer script")," is\nbuilt transparently by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/getsynth/synth/blob/master/.github/workflows/release.yml"},"GitHub's CI/CD pipeline")," directly from\npublic releases."),(0,a.kt)("h2",{id:"philosophy"},"Philosophy"),(0,a.kt)("p",null,"Below are a set of principles that guide the telemetry decisions made in Synth:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"It is made ",(0,a.kt)("em",{parentName:"li"},"completely transparent")," that telemetry is going to be installed"),(0,a.kt)("li",{parentName:"ol"},"It is made ",(0,a.kt)("em",{parentName:"li"},"completely transparent")," as to what data we collect"),(0,a.kt)("li",{parentName:"ol"},"No personally identifiable information is collected. (IP addresses are\ndiscarded at the sink)"),(0,a.kt)("li",{parentName:"ol"},"Nothing is collected unless it is explicitly and clearly documented here.")),(0,a.kt)("h2",{id:"enabling--disabling-telemetry"},"Enabling / Disabling Telemetry"),(0,a.kt)("p",null,"Synth uses a configuration file under the user configuration directory (\ne.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/synth/config.json")," on typical unix systems) as a marker for\ntelemetry being enabled. This file also contains a randomly generated\nidentifier. We use this identifier to better understand how we can improve the\nuser experience for Synth."),(0,a.kt)("p",null,"You can check if telemetry is enabled by running ",(0,a.kt)("inlineCode",{parentName:"p"},"synth telemetry status"),"."),(0,a.kt)("p",null,"You can opt-out at any time by running ",(0,a.kt)("inlineCode",{parentName:"p"},"synth telemetry disable"),"."),(0,a.kt)("h2",{id:"where-does-the-data-go"},"Where does the data go?"),(0,a.kt)("p",null,"All the telemetry data is collected in a ",(0,a.kt)("a",{parentName:"p",href:"https://posthog.com/"},"Posthog"),"\ninstance run exclusively by the maintainers of Synth."),(0,a.kt)("p",null,"If you would like the data associated with your UUID to be deleted, please\ncontact ",(0,a.kt)("inlineCode",{parentName:"p"},"opensource@getsynth.com"),"."),(0,a.kt)("h2",{id:"what-does-synth-collect"},"What does Synth collect?"),(0,a.kt)("p",null,"Synth's telemetry collects 6 fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"distinct_id"),": A randomly generated UUID stored\nat ",(0,a.kt)("inlineCode",{parentName:"li"},"~/.config/synth/config.json")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"command"),": The command that was issued by the user. This is a text field whose\nvalue is one of the following:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"init")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"import")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"generate")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"telemetry::enabled")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"telemetry::disabled")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"success"),": If the command completed in success."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"version"),": The current semver of Synth. For example ",(0,a.kt)("inlineCode",{parentName:"li"},"v0.4.3"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"os"),": The target platform for which the binary was built. This is the value\nof ",(0,a.kt)("inlineCode",{parentName:"li"},"cargo"),"'s ",(0,a.kt)("inlineCode",{parentName:"li"},"CARGO_CFG_TARGET_OS")," environment variable under which ",(0,a.kt)("inlineCode",{parentName:"li"},"synth"),"\nwas built in CI/CD. Currently, this is one of:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"linux")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windows")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"macos")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timestamp"),": The time at which the command was issued. For\nexample ",(0,a.kt)("inlineCode",{parentName:"li"},"2021-05-06T16:13:40.084Z"),".")),(0,a.kt)("p",null,"Below is the ",(0,a.kt)("a",{parentName:"p",href:"/docs/getting_started/schema"},"Synth schema")," of PostHog events posted by ",(0,a.kt)("inlineCode",{parentName:"p"},"synth"),"'s\nactivity:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"synth",synth:!0},'{\n    "type": "object",\n    "distinct_id": {\n        "type": "string",\n        "uuid": {}\n    },\n    "command": {\n        "type": "string",\n        "categorical": {\n            "import": 1,\n            "generate": 10,\n            "init": 1,\n            "telemetry::enabled": 10,\n            "telemetry::disabled": 1\n        }\n    },\n    "version": {\n        "type": "string",\n        "pattern": "v0\\\\.4\\\\.3"\n    },\n    "os": {\n        "type": "string",\n        "categorical": {\n            "linux": 10,\n            "macos": 10,\n            "windows": 10\n        }\n    },\n    "timestamp": {\n      "type": "string",\n      "date_time": {\n        "format": "%Y-%m-%dT%H:%M:%S",\n        "subtype": "naive_date_time",\n        "begin": "2015-01-01T00:00:00",\n        "end": "2020-01-01T12:00:00"\n      }\n    }\n}\n')))}d.isMDXComponent=!0}}]);