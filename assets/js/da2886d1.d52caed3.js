"use strict";(self.webpackChunksynth_docs=self.webpackChunksynth_docs||[]).push([[8297],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(t),d=o,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||a;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1575:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={title:"one_of"},s=void 0,p={unversionedId:"docs/content/one-of",id:"docs/content/one-of",isDocsHomePage:!1,title:"one_of",description:"Synth's one_of generator is a compound operator, i.e. a way to compose other generator types together. It lets you",source:"@site/docs/docs/content/one-of.md",sourceDirName:"docs/content",slug:"/docs/content/one-of",permalink:"/docs/content/one-of",editUrl:"https://github.com/getsynth/synth/edit/master/docs/docs/docs/content/one-of.md",tags:[],version:"current",frontMatter:{title:"one_of"},sidebar:"docsSidebar",previous:{title:"array",permalink:"/docs/content/array"},next:{title:"same_as",permalink:"/docs/content/same-as"}},l=[],u={toc:l};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Synth's ",(0,a.kt)("inlineCode",{parentName:"p"},"one_of")," generator is a compound operator, i.e. a way to compose other generator types together. It lets you\ndefine a new generator that samples randomly from a specified list of dependent generators (called ",(0,a.kt)("em",{parentName:"p"},"variants"),"). In that\nway, ",(0,a.kt)("inlineCode",{parentName:"p"},"one_of")," is similar to ",(0,a.kt)("a",{parentName:"p",href:"string#categorical"},"categorical ",(0,a.kt)("inlineCode",{parentName:"a"},"string"),"s"),". However, the variants of\na ",(0,a.kt)("inlineCode",{parentName:"p"},"one_of")," generator are allowed to be generated from any other Synth generator."),(0,a.kt)("p",null,"Variants of a ",(0,a.kt)("inlineCode",{parentName:"p"},"one_of")," generator are specified with the ",(0,a.kt)("inlineCode",{parentName:"p"},'"variants"')," field. Allowed value is an array of Synth\ngenerators."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"synth",synth:!0},'{\n  "type": "one_of",\n  "variants": [ {\n    "weight": 0.5,\n    "type": "string",\n    "pattern": "M|F"\n  }, {\n    "weight": 0.5,\n    "type": "null"\n  } ]\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"one_of")," has a concept of a weight for each variant - where weight represents the individual entry's contribution to the\nprobability distribution. The weight can be specified by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},'"weight"')," field to the corresponding variant's\ndefinition."),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"synth",synth:!0},'{\n  "type": "one_of",\n  "variants": [ {\n    "weight": 9.5,\n    "type": "string",\n    "faker": {\n      "generator": "address"\n    }\n  }, {\n    "weight" : 0.5,\n    "type": "object",\n      "postcode": {\n        "type": "string",\n        "faker": {\n          "generator": "post_code"\n        }\n      },\n      "number": {\n        "type": "number",\n        "subtype": "u64",\n        "range": {\n          "low": 1,\n          "high": 200,\n          "step": 2\n        }\n      }\n  } ]\n}\n')))}f.isMDXComponent=!0}}]);